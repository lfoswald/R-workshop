stringsAsFactors = F)
## --------------------------------------------------------------------------------------------
str(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)[3] <- "nconflict"
names(mydata)
## --------------------------------------------------------------------------------------------
summary(mydata)
## --------------------------------------------------------------------------------------------
nrow(mydata) # Number of rows
ncol(mydata) # Number of columns
dim(mydata) # Rows first then columns.
## --------------------------------------------------------------------------------------------
mydata[1, ]
## --------------------------------------------------------------------------------------------
mydata[c(1,2), ]
## --------------------------------------------------------------------------------------------
mydata[1:5,]
## --------------------------------------------------------------------------------------------
mydata[3,7]
# EX 10
##-------------------------------------------------------------------------------
mydata[1,1]
# EX 11
##-----------------------------------------------------------------------------
mydata[100,3]
## --------------------------------------------------------------------------------------------
mydata$nconflict
## --------------------------------------------------------------------------------------------
table(mydata$region)
## --------------------------------------------------------------------------------------------
summary(mydata$nconflict)
table(mydata$region, mydata$nconflict > mean(mydata$nconflict))
# EX 12
##-------------------------------------------------------------------------------
head(mydata[, 1])
head(mydata[, "country"])
# EX 13
##F-------------------------------------------------------------------------------
max(mydata$nconflict)
# EX 14
## -------------------------------------------------------------------------------
mydata$country[mydata$nconflict == max(mydata$nconflict)]
# EX 15
## -------------------------------------------------------------------------------
head(mydata$country[seq(1, length(mydata$country), 2)])
## --------------------------------------------------------------------------------------------
vec <- c(4, 1, 2, NA, 3)
mean(vec) #Result is NA!
sum(vec) #Result is NA!
## --------------------------------------------------------------------------------------------
mean(vec, na.rm = T)
sum(vec, na.rm = T)
## --------------------------------------------------------------------------------------------
obs <- c("Germany", "Europe", NA, NA, NA)
mydata_new <- rbind(mydata, obs)
dim(mydata_new)
## --------------------------------------------------------------------------------------------
mydata$nconflict_fatalities <- mydata$nconflict - mydata$nconflict_no_fatalities
head(mydata, 3) #prints out the first 3 rows of the data frame
## --------------------------------------------------------------------------------------------
mydata$av_fatalities <- mydata$fatalities/mydata$nconflict
## --------------------------------------------------------------------------------------------
mydata_na <- mydata[mydata$region == "Northern Africa",]
max(mydata_na$nconflict)
mydata_na$country[mydata_na$nconflict == max(mydata_na$nconflict)]
View(my_matrix)
getwd()
?length()
## BASICS
## --------------------------------------------------------------------------------------------
4*9
sqrt(144)
a == b
2 == 4
2 == 2
## --------------------------------------------------------------------------------------------
result <- 5/3
result
?c()
## --------------------------------------------------------------------------------------------
my_vector <- c(1, 2, 3)
my_character_vector <- c("Welcome", "everyone")
my_character_vector <- c(Welcome, everyone)
str(my_character_vector)
length(my_vector)
my_character_vector <- c("Welcome", 1)
str(my_character_vector)
## --------------------------------------------------------------------------------------------
my_list <- list(1, "a", TRUE)
str(my_list)
## --------------------------------------------------------------------------------------------
my_matrix <- matrix(nrow=3, ncol=3)
my_matrix
dim(my_matrix)
## --------------------------------------------------------------------------------------------
my_df <- data.frame(id = letters[1:10], x = 1:10, y = 11:20)
my_df
head(my_df)
tail(my_df)
names(my_df)
dim(my_df)
str(my_df)
# turning vectors into factors
my_vector <- c("single","single","married","married","single")
my_factor <- as.factor(my_vector)
levels(my_factor)
my_factor
## --------------------------------------------------------------------------------------------
my_list <- list(1, "a", TRUE)
my_list
my_list[2]
my_list[[2]]
my_vec <- c("a", "b", "c")
my_vec <- c("a", "b", "c")
my_vec[2]
df <- data.frame(a = c(1,2,3), b = c(4,5,6), c = c(7,8,9))
df
mat <- as.matrix(df)
mat
str(mat)
matrix(nrow = 3, nrow = 3, 0)
matrix(nrow = 3, ncol = 3, 0)
levels(my_factor)
levels(my_factor)
levels(my_factor)
levels(my_factor)
## --------------------------------------------------------------------------------------------
# direct creation of factors
my_factor <- factor(c("single","single","married","married","single"))
# turning vectors into factors
my_vector <- c("single","single","married","married","single")
my_factor <- as.factor(my_vector)
levels(my_factor)
##----
matrix(nrow = 3, ncol = 3, 0)
##----
matrix(nrow = 3, ncol = 3, 1)
##----
matrix(nrow = 3, ncol = 3)
matrix(nrow = 3, ncol = 3, 0)
matrix(nrow = 3, ncol = 3, 1)
df <- data.frame(a = c(1,2,3), b = c(4,5,6), c = c(7,8,9))
df
mat <- as.matrix(df)
mat
nvec <- c(1,2,3,4)
cvec <- as.character(nvec)
str(nvec)
str(cvec)
## VECTORS
## --------------------------------------------------------------------------------------------
pop1 <- c(1379, 1324, 323, 261, 208)
pop1
## --------------------------------------------------------------------------------------------
pop2 <- c(194, 187, 161, 142, 127)
pop <- c(pop1, pop2)
pop
## --------------------------------------------------------------------------------------------
cname <- c("CHN", "IND", "USA", "IDN", "BRA")
## --------------------------------------------------------------------------------------------
asia <- c(TRUE, TRUE, F, T, F)
## --------------------------------------------------------------------------------------------
regime <- c("Autocracy", "FlawedDem", "FullDem", "FlawedDem", "FlawedDem")
## --------------------------------------------------------------------------------------------
regime <- as.character(regime)
str(regime)
asia <- as.character(asia)
str(asia)
asia <- as.logical(asia)
str(asia)
## EX3 ---- results="hide"-------------------------------------------------------------------------
vec <- c("1", "2", "3")
## --------------------------------------------------------------------------------------------
pop1
pop1_double <- pop1 * 2
pop1_double
## EX4 ---- results="hide"-------------------------------------------------------------------------
pop1 + pop2
## EX5 ---- results="hide"-------------------------------------------------------------------------
pop_c <- c(pop1, pop2)
## --------------------------------------------------------------------------------------------
min(pop)
max(pop)
mean(pop)
## --------------------------------------------------------------------------------------------
pop1[1]
cname[1]
## --------------------------------------------------------------------------------------------
pop[2,5]
## --------------------------------------------------------------------------------------------
pop[2:5]
## Option 1: Dropping the 5th element
cname_copy[-5]
## --------------------------------------------------------------------------------------------
cname_copy <- cname
## Option 1: Dropping the 5th element
cname_copy[-5]
## Option 2 (for generalizability): Getting the last element and dropping it.
length(cname_copy)
## --------------------------------------------------------------------------------------------
regime
regime[2] <- "FullDem"
regime
## --------------------------------------------------------------------------------------------
cindex <- seq(from = 1, to = length(pop1), by = 1)
cindex
## --------------------------------------------------------------------------------------------
seq(2, 10, 2)
?seq
## --------------------------------------------------------------------------------------------
rep(30, 5)
## --------------------------------------------------------------------------------------------
completed <- rep(c("yes","no"), 5)
completed
## --------------------------------------------------------------------------------------------
completed2 <- rep(c("yes","no"), each = 5)
completed2
## --------------------------------------------------------------------------------------------
pop1[names(pop1) == "BRA"]
## R-Primer code + solutions
## BASICS
## --------------------------------------------------------------------------------------------
4*91
sqrt(144)
## --------------------------------------------------------------------------------------------
4 > 2
4 <= 2
## --------------------------------------------------------------------------------------------
result <- 5/3
result
## --------------------------------------------------------------------------------------------
my_vector <- c(1, 2, 3)
my_character_vector <- c("Welcome", "everyone")
length(my_vector)
str(my_character_vector)
## --------------------------------------------------------------------------------------------
my_matrix <- matrix(nrow=3, ncol=3)
dim(my_matrix)
## --------------------------------------------------------------------------------------------
my_list <- list(1, "a", TRUE)
my_list[2]
my_list[[2]]
## --------------------------------------------------------------------------------------------
my_df <- data.frame(id = letters[1:10], x = 1:10, y = 11:20)
## --------------------------------------------------------------------------------------------
# direct creation of factors
my_factor <- factor(c("single","single","married","married","single"))
# turning vectors into factors
my_vector <- c("single","single","married","married","single")
my_factor <- as.factor(my_vector)
levels(my_factor)
## VECTORS
## --------------------------------------------------------------------------------------------
pop1 <- c(1379, 1324, 323, 261, 208)
pop1
## --------------------------------------------------------------------------------------------
pop2 <- c(194, 187, 161, 142, 127)
pop <- c(pop1, pop2)
pop
## --------------------------------------------------------------------------------------------
str(pop)
## --------------------------------------------------------------------------------------------
cname <- c("CHN", "IND", "USA", "IDN", "BRA")
str(cname)
## --------------------------------------------------------------------------------------------
asia <- c(TRUE, TRUE, F, T, F)
str(asia)
## --------------------------------------------------------------------------------------------
regime <- c("Autocracy", "FlawedDem", "FullDem", "FlawedDem", "FlawedDem")
regime <- as.factor(regime)
str(regime)
## --------------------------------------------------------------------------------------------
regime <- as.character(regime)
str(regime)
asia <- as.character(asia)
str(asia)
asia <- as.logical(asia)
str(asia)
## EX1 --------------------------------------------------------------------------------------
#no_good <- (a,b,c)
#no_good_either <- c(one, two, three)
## EX2 ---- results="hide"-------------------------------------------------------------------------
diff <-c(TRUE,"TRUE")
class(diff)
## EX3 ---- results="hide"-------------------------------------------------------------------------
vec <- c("1", "2", "3")
## --------------------------------------------------------------------------------------------
pop1
pop1_double <- pop1 * 2
pop1_double
## EX4 ---- results="hide"-------------------------------------------------------------------------
pop1 + pop2
## EX5 ---- results="hide"-------------------------------------------------------------------------
pop_c <- c(pop1, pop2)
## --------------------------------------------------------------------------------------------
min(pop)
max(pop)
mean(pop)
## EX6 -------------------------------------------------------------------------------
sum(pop)/length(pop)
## --------------------------------------------------------------------------------------------
pop1[1]
cname[1]
## --------------------------------------------------------------------------------------------
pop[2:5]
cname[c(2,5)]
## --------------------------------------------------------------------------------------------
first <- pop[1]
## --------------------------------------------------------------------------------------------
cname_copy <- cname
## Option 1: Dropping the 5th element
cname_copy[-5]
## Option 2 (for generalizability): Getting the last element and dropping it.
length(cname_copy)
cname_copy[-length(cname_copy)]
## --------------------------------------------------------------------------------------------
regime
regime[2] <- "FullDem"
regime
## EX7 ---------------------------------------------------------------
pop1_copy <- pop1 #Making a copy
pop1_copy[c(3,5)] <- -10 #Wrong!!
pop1_copy[c(3,5)] <- pop1_copy[c(3,5)] - 10
## --------------------------------------------------------------------------------------------
cindex <- seq(from = 1, to = length(pop1), by = 1)
cindex
## --------------------------------------------------------------------------------------------
seq(2, 10, 2)
## --------------------------------------------------------------------------------------------
rep(30, 5)
## --------------------------------------------------------------------------------------------
completed <- rep(c("yes","no"), 5)
completed
## --------------------------------------------------------------------------------------------
completed2 <- rep(c("yes","no"), each = 5)
completed2
## --------------------------------------------------------------------------------------------
names(pop1)
cname
names(pop1) <- cname
names(pop1)
pop1
## --------------------------------------------------------------------------------------------
pop1[names(pop1) == "BRA"]
# EX 8
## -------------------------------------------------------------------------------
mean(pop1)
pop1[pop1 >= mean(pop1)]
# EX 9
## -------------------------------------------------------------------------------
pop1[pop1 < max(pop1) & names(pop1) != "USA"]
## --------------------------------------------------------------------------------------------
cname == "IDN"
regime[cname == "IDN"]
## --------------------------------------------------------------------------------------------
which(cname == "IDN")
regime[which(cname == "IDN")]
## --------------------------------------------------------------------------------------------
pop1[asia == T & regime != "Autocracy"]
## ---- warning = F----------------------------------------------------------------------------
#install.packages("foreign") #alternatively use "Install" button
library(foreign)
## --------------------------------------------------------------------------------------------
mydata <- read.csv("data/ACLED_countries.csv",
stringsAsFactors = F)
## --------------------------------------------------------------------------------------------
str(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)[3] <- "nconflict"
names(mydata)
## --------------------------------------------------------------------------------------------
summary(mydata)
## --------------------------------------------------------------------------------------------
nrow(mydata) # Number of rows
ncol(mydata) # Number of columns
dim(mydata) # Rows first then columns.
## --------------------------------------------------------------------------------------------
mydata[1, ]
## --------------------------------------------------------------------------------------------
mydata[c(1,2), ]
## --------------------------------------------------------------------------------------------
mydata[1:5,]
## --------------------------------------------------------------------------------------------
mydata[3,7]
# EX 10
##-------------------------------------------------------------------------------
mydata[1,1]
# EX 11
##-----------------------------------------------------------------------------
mydata[100,3]
## --------------------------------------------------------------------------------------------
mydata$nconflict
## --------------------------------------------------------------------------------------------
table(mydata$region)
## --------------------------------------------------------------------------------------------
summary(mydata$nconflict)
table(mydata$region, mydata$nconflict > mean(mydata$nconflict))
# EX 12
##-------------------------------------------------------------------------------
head(mydata[, 1])
head(mydata[, "country"])
# EX 13
##F-------------------------------------------------------------------------------
max(mydata$nconflict)
# EX 14
## -------------------------------------------------------------------------------
mydata$country[mydata$nconflict == max(mydata$nconflict)]
# EX 15
## -------------------------------------------------------------------------------
head(mydata$country[seq(1, length(mydata$country), 2)])
## --------------------------------------------------------------------------------------------
vec <- c(4, 1, 2, NA, 3)
mean(vec) #Result is NA!
sum(vec) #Result is NA!
## --------------------------------------------------------------------------------------------
mean(vec, na.rm = T)
sum(vec, na.rm = T)
## --------------------------------------------------------------------------------------------
obs <- c("Germany", "Europe", NA, NA, NA)
mydata_new <- rbind(mydata, obs)
dim(mydata_new)
## --------------------------------------------------------------------------------------------
mydata$nconflict_fatalities <- mydata$nconflict - mydata$nconflict_no_fatalities
head(mydata, 3) #prints out the first 3 rows of the data frame
## --------------------------------------------------------------------------------------------
mydata$av_fatalities <- mydata$fatalities/mydata$nconflict
## --------------------------------------------------------------------------------------------
mydata_na <- mydata[mydata$region == "Northern Africa",]
max(mydata_na$nconflict)
mydata_na$country[mydata_na$nconflict == max(mydata_na$nconflict)]
## --------------------------------------------------------------------------------------------
pop1[names(pop1) == "BRA"]
# EX 8
## -------------------------------------------------------------------------------
mean(pop1)
pop1[pop1 >= mean(pop1)]
## ---- warning = F----------------------------------------------------------------------------
#install.packages("foreign") #alternatively use "Install" button
library(foreign)
## --------------------------------------------------------------------------------------------
mydata <- read.csv("data/ACLED_countries.csv",
stringsAsFactors = F)
## --------------------------------------------------------------------------------------------
str(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)[3] <- "nconflict"
names(mydata)
## --------------------------------------------------------------------------------------------
summary(mydata)
install.packages("foreign")
install.packages("foreign")
getwd()
## ---- warning = F----------------------------------------------------------------------------
#install.packages("foreign") #alternatively use "Install" button
library(foreign)
## --------------------------------------------------------------------------------------------
mydata <- read.csv("data/ACLED_countries.csv",
stringsAsFactors = F)
## --------------------------------------------------------------------------------------------
str(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)
## --------------------------------------------------------------------------------------------
names(mydata)[3] <- "nconflict"
names(mydata)
## --------------------------------------------------------------------------------------------
summary(mydata)
## --------------------------------------------------------------------------------------------
nrow(mydata) # Number of rows
ncol(mydata) # Number of columns
dim(mydata) # Rows first then columns.
## --------------------------------------------------------------------------------------------
mydata[1, ]
getwd()
## --------------------------------------------------------------------------------------------
mydata[c(1,2), ]
## --------------------------------------------------------------------------------------------
mydata[1:5,]
head(mydata)
head(mydata,5)
## --------------------------------------------------------------------------------------------
mydata[3,7]
## --------------------------------------------------------------------------------------------
mydata[3,4]
## --------------------------------------------------------------------------------------------
mydata$nconflict
mydata
mydata[ ,5]
## --------------------------------------------------------------------------------------------
table(mydata$region)
## --------------------------------------------------------------------------------------------
mydata$region
table(mydata$region)
## --------------------------------------------------------------------------------------------
vec <- c(4, 1, 2, NA, 3)
mean(vec) #Result is NA!
## --------------------------------------------------------------------------------------------
mean(vec, na.rm = T)
sum(vec) #Result is NA!
sum(vec, na.rm = T)
names(mydata)
## --------------------------------------------------------------------------------------------
mydata$nconflict_fatalities <- mydata$nconflict - mydata$nconflict_no_fatalities
head(mydata, 3) #prints out the first 3 rows of the data frame
dim(mydata)
