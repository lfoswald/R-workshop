getwd()
library(knitr)
knitr::purl(2-tidyverse.Rmd)
knitr::purl(tidyverse-solutions.Rmd)
knitr::purl(tidyversesolutions.Rmd)
getwd()
knitr::purl("tidyversesolutions.Rmd")
## ---------------------------------------------------------------------------------------------------
library(tidyverse)
## ---------------------------------------------------------------------------------------------------
tidyverse_packages()
mpg %>% filter(manufacturer=="audi") %>% group_by(model) %>% summarise(hwy_mean = mean(hwy))
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model) %>%
summarise(hwy_mean = mean(hwy))
dplyr::select(penguins, species, island, year, body_mass_g, sex)
library(palmerpenguins)
dplyr::select(penguins, species, island, year, body_mass_g, sex)
## EX3----------------------------------------------------------------------------------------
dplyr::filter(penguins, year == 2007 & species == "Chinstrap")
## ---------------------------------------------------------------------------------------------------
penguins %>%
dplyr::mutate(body_mass_lbs = body_mass_g/453.6)
## ---------------------------------------------------------------------------------------------------
# compare this output with the one below
penguins %>%
dplyr::summarize(heaviest_penguin = max(body_mass_g, na.rm = T))
## ---------------------------------------------------------------------------------------------------
penguins %>%
dplyr::group_by(species) %>%
dplyr::summarize(heaviest_penguin = max(body_mass_g, na.rm = T))
## EX6-------------------------------------------------------------------------------------------
penguins %>%
filter(species == "Gentoo" & year == 2008)
## EX6-------------------------------------------------------------------------------------------
penguins %>%
filter(species == "Gentoo" & year == 2008)%>%
dplyr::arrange(bill_length_mm)
## EX6-------------------------------------------------------------------------------------------
penguins %>%
filter(species == "Gentoo" & year == 2008)%>%
dplyr::arrange(desc(bill_length_mm))
penguins %>%
filter(species == "Gentoo" & year == 2008)%>%
dplyr::arrange(bill_length_mm)
## -----------------------------------------------------------------------------------------
library(nycflights13)
flights
## ----distribution-plot, warning=F, exercise=TRUE, exercise.lines = 5--------------------------------
ggplot(penguins, aes(x = body_mass_g)) +
geom_histogram()
ggplot(penguins, aes(x = body_mass_g)) +
geom_density(bins = 15, fill = "#FF6666")
ggplot(penguins, aes(x = body_mass_g)) +
geom_bar(bins = 15, fill = "#FF6666")
## ----box-plot, exercise=TRUE, exercise.lines = 6----------------------------------------------------
ggplot(penguins, aes(x = species, y = body_mass_g)) +
geom_boxplot() +
theme_minimal() +
labs(x = "Species",
y = "Body mass (g)")
## ----box-plot, exercise=TRUE, exercise.lines = 6----------------------------------------------------
ggplot(penguins, aes(x = species, y = body_mass_g, colour = species)) +
geom_boxplot() +
theme_minimal() +
labs(x = "Species",
y = "Body mass (g)")
## ---- results=FALSE---------------------------------------------------------------------------------
df <- data.frame(
a = rnorm(100, 5, 2),
b = rnorm(100, 100, 15),
c = rnorm(100, 2, 1),
d = rnorm(100, 36, 7)
)
df$a <- (df$a - mean(df$a, na.rm = TRUE)) / sd(df$a, na.rm = TRUE)
df$b <- (df$b - mean(df$b, na.rm = TRUE)) / sd(df$a, na.rm = TRUE) # spot the mistake?
df$c <- (df$c - mean(df$c, na.rm = TRUE)) / sd(df$c, na.rm = TRUE)
df$d <- (df$d - mean(df$d, na.rm = TRUE)) / sd(df$d, na.rm = TRUE)
## ---------------------------------------------------------------------------------------------------
zscale <- function(x){
(x - mean(x, na.rm = T) / sd(x, na.rm = T))
}
## ---------------------------------------------------------------------------------------------------
zscale <- function(x){
if (is.numeric(x)) {
(x - mean(x, na.rm = T) / sd(x, na.rm = T))
}
}
## ---- results=FALSE---------------------------------------------------------------------------------
df$a <- zscale(df$a)
df$b <- zscale(df$b)
df$c <- zscale(df$c)
df$d <- zscale(df$d)
# you can also use your function with a pipe!
df$d %>% zscale()
## ---- results=FALSE---------------------------------------------------------------------------------
# repetitive code
df$a <- zscale(df$a)
df$b <- zscale(df$b)
df$c <- zscale(df$c)
df$d <- zscale(df$d)
# equivalent iteration
for (i in seq_along(df)) {       # seq_along() similar to length()
df[[i]] <- zscale(df[[i]])     # [[]] because we are working on single elements
}
## ---- results=FALSE---------------------------------------------------------------------------------
# repetitive code
mean(df$a)
mean(df$b)
mean(df$c)
mean(df$d)
# equivalent map function
map_dbl(df,mean)
# map function in tidyverse style
df %>% map_dbl(mean)
map_dbl(df,zscale)
map(df,zscale)
